import {createSlice, PayloadAction} from '@reduxjs/toolkit';
import {
    AppContext,
    FilterContextArrayFields,
    FilterContextNumericFields,
    FilterContextTextFields, FilterContextType,
    initialState
} from "../FilterContext.ts";


export type SetNumericFieldPayload = {
    name: keyof FilterContextNumericFields
    value: number
}

export type SetTextFieldPayload = {
    name: keyof FilterContextTextFields
    value: string
}

export type SetArrayFieldPayload = {
    name: keyof FilterContextArrayFields
    value: string[]
}

// Create a slice of state
const filtersSlice = createSlice({
    name: 'filters',
    initialState,
    reducers: {
        setNumericField: (state: AppContext, action: PayloadAction<SetNumericFieldPayload>) => {
            state.filterContext.fields[action.payload.name] = action.payload.value;
        },
        setTextField: (state: AppContext, action: PayloadAction<SetTextFieldPayload>) => {
            state.filterContext.fields[action.payload.name] = action.payload.value;
        },
        setArrayField: (state: AppContext, action: PayloadAction<SetArrayFieldPayload>) => {
            state.filterContext.fields[action.payload.name] = action.payload.value;
        },
    }
});

// Export actions generated by createSlice
export const {setNumericField, setArrayField, setTextField} = filtersSlice.actions;

// Export the reducer to be used in the store configuration
export default filtersSlice.reducer;